#!/bin/bash

openwrt_label="$1"
openwrt_path="$2"
openwrt_rev="$3"
work_dir=$( cd "$( dirname "${BASH_SOURCE[0]}" )/../.." && pwd )
platform_dir="${work_dir}/openwrt"
build_dir="${work_dir}/build"
checkout_dir="${build_dir}/openwrt"

if [[ -z "${openwrt_label}" || -z "${openwrt_path}" || -z "${openwrt_rev}" ]]; then
  echo "ERROR: Usage: $0 <label> <path> <revision>"
  exit 1
fi

# Check if all utilities that we need are ready for use
for program in quilt svn
do
  p=$(which $program)
  if [ "$p" == "" ]; then
    echo "ERROR: $program not found."
    exit 1
  fi
done

# Check for proper working directory
if [[ ! -d  ${platform_dir} ]]; then
  echo "ERROR: Invalid working directory!"
  exit 1
fi

mkdir -p ${build_dir}

# Get version identifier
firmware_version=$(git describe --always)

# Now that we have everything verified, first checkout the OpenWRT repository
openwrt_path_name="${openwrt_path//\//-}"
openwrt_path_name="${openwrt_path_name//_/-}"

echo "OpenWRT path: ${openwrt_path}"
echo "OpenWRT revision: ${openwrt_rev}"
echo "Checking out OpenWRT, this could take some time..."

rm -rf ${checkout_dir}
git clone -b for-14.07 --single-branch git://github.com/goran-mahovlic/packages.git ${checkout_dir}

echo ${openwrt_label} > ${checkout_dir}/.label

# Inject feeds and configurations
echo "Configuring feeds..."
echo "src-git nodewatcher https://github.com/wlanslovenija/firmware-packages-opkg.git" > ${checkout_dir}/feeds.conf
cat ${platform_dir}/feeds/${openwrt_path_name} >> ${checkout_dir}/feeds.conf

# Adding feeds

# Patch OpenWRT
echo "Applying patches for OpenWRT base tree..."
cd ${checkout_dir}
ln -s ${platform_dir}/patches/${openwrt_path_name} patches
quilt push -f -a || {
  echo "ERROR: Failed to apply patches."
  exit 1
}

# Remove certain core OpenWrt packages as our feed overrides them. If we don't remove
# them here, they will be ignored.
override_packages_file="${platform_dir}/override/${openwrt_path_name}/packages"
if [ -f ${override_packages_file} ]; then
  echo "Removing base packages that are overriden by our feed..."
  for package in $(cat ${override_packages_file}); do
    echo "  ${package}"
    rm -rf ${checkout_dir}/${package}
  done
fi

# Update version file and banner
echo "git.${firmware_version}" > package/base-files/files/etc/version
echo "
 +-------------------------------------------------+
 | wlan slovenia                  open.wlan-si.net |
 |          node                                   |
 +-------------------------------------------------+
 *) FIRMWARE VERSION: git.${firmware_version}

" > package/base-files/files/etc/banner

# Importing feeds
echo "Importing feeds..."
./scripts/feeds update -a || {
  echo "ERROR: Failed to update feeds."
  exit 1
}

# Ensure that all feeds are present
for feed in $(cat feeds.conf | awk '{print $2}'); do
  [ -d feeds/${feed} ] || {
    echo "ERROR: Feed '${feed}' is missing (failure to import feed?)."
    exit 1
  }
done

for package in $(cat ${platform_dir}/packages); do
  feed="$(echo ${package} | cut -s -d '@' -f 2)"
  package="$(echo ${package} | cut -d '@' -f 1)"

  if [ -n "${feed}" ]; then
    feed="-p ${feed}"
  fi

  ./scripts/feeds install ${feed} ${package}
done

# Preparation is now completed
echo "Preparation completed, you may now build the firmware."
